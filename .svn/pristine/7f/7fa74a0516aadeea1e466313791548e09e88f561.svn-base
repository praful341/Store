<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAASCSURBVFhHpVdZS1xnGD7zD5oEmiYtuGsal4C7MzpuV3pb
        rWtBbfFGvcjojUvABLyQUtEhCopehDYLLqPplYLbKIikLiMuk0AMSXGtuTVp9j7PMN8wnZzlGyMcPZ7z
        nfd5vud9v3dRDg4OFL3r6OhI2dvbMy0uLkZ3dXXVVldX37FarRvx8fHHkZGRr3jFxcWd8FlVVdXvPT09
        vywtLUXwm+PjY13bxNVccHh4qOzv75tmZ2fjGhsbOzMyMp4A7G1oaOinsLAwzxUeHu65xP98hzVvzGaz
        22az/To9PX2NNmhLa5OqL7jrra2tC21tbTeSkpKeC1ABaPSX60NCQj4lJib+fQM/m5ubF2hTjcRnD7lw
        fn7+alFR0Z/Y2Qf/nRoBB773KvMBth7C5vdqJP5HgAsmJyeT8vLy/uIO1ABplK6g1LLkaIs2YTsx0B0+
        AgRfWFiIxsJHWuCUFrGw09/fXzYwMFAKX2/zmYwytJmfn/+IGP5KeAiQ1c7OzlclJSXjRuDj4+OZjG5e
        ExMT4GDeCoYEMBzEEkoIBUwdHR027OSdluwpKSm7Y2NjWf7seR8sCWIA6zo2bvIcQxpxOp1XUlNTn2n5
        lKrU1dX1qh0nLwkLXCPlDmIQC664wm+pgKm5ufmWnox8V1BQML+ysnJJLZL5DK6RJkF7xCS2AqPfZWdn
        bxj5kUcS/nuwtrb2jRYJh8ORySA1ssX3OTk5G8RWBgcHf4yJiXklE8n48GNpael9kLioQyIrPT3dkAQx
        ia3At7eNGPuTkyHBYAUJt5Fb6+vrbyuFhYULwRAgGZIoKyu7t76+/rWaEgxWkLDqkSAmsJ0KInJXNqMF
        KgESd7VIkBhJpKWlPVGz7z0NuwrK6slZCAglysvL/0DhOqd2RJmsUJ5rsPa9Wp1ISEg4UfDrny8hUFlZ
        qUmAKnR3d/+sluCISWy64OlZCDAOKioq7rpcLs04GB4etsK+nguenjkIIf09PfCRkRH6X/Mk+IIQR8Ee
        jALcOcDvA1wzFwA8Sw9cdFENDQ12ZWhoqAhJ4VQ2EREcka8KzkAcHR0luEwiOgX2D0zF3yItuoxyAVMx
        jt0DgGumYoBnymRBbyp2Afuypxi1tLTcpLRaKniLkXN1dVW1GHkTD8GlKiKxWltbb3qKEY8KWu4YyKZ5
        GozKMRKORRac8UYsYopy7FHBqCFJTk5+xsj2Tzi8RwU0A1y6K/I2JDZfQyJaMrfbzZbModeS0b/Yra8l
        IzjKrzQ4bRODWIEtmc8VbBwNSLh7e3t/6uvrq5DtghhboikV0osZ4bO2fGpqim35il5bHhER8Q7XW9n8
        Idpy2g6snqqDCXrEq8XFxRxM3suCaDWztAFbD2HTeDARspDl9vb2+fb29mYE33PuwChPBJRqj+QY617A
        RgttSY9mgoR3OFXm5uZim5qaOi0WizsqKupftTlRZTh9jOH0t5mZmWsiyIMaTv0Xkzkn3OXl5XAEXlVt
        be0QR/HY2NiXiIPXGNFOOarn5uau19TU3LHb7RzPI/mNGM9xrzkd/wcGgmlsww+N9QAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>